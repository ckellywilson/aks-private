name: üîç Dependency Warning Check

on:
  workflow_dispatch:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  check-dependencies:
    name: Check for Dependency Warnings
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üîç Comprehensive Dependency Check
        id: dep-check
        run: |
          echo "üîç Running comprehensive dependency warning check..."
          
          # Create comprehensive warnings log
          WARNINGS_LOG="dependency-warnings-detailed.txt"
          echo "Dependency Warning Report - $(date)" > "$WARNINGS_LOG"
          echo "=========================================" >> "$WARNINGS_LOG"
          echo "" >> "$WARNINGS_LOG"
          
          # Check Azure CLI
          echo "üîß Checking Azure CLI..." | tee -a "$WARNINGS_LOG"
          az version 2>&1 | grep -i "warning\|deprecated" | tee -a "$WARNINGS_LOG" || echo "No Azure CLI warnings" | tee -a "$WARNINGS_LOG"
          echo "" >> "$WARNINGS_LOG"
          
          # Check Python packages
          echo "üêç Checking Python packages..." | tee -a "$WARNINGS_LOG"
          python3 -W all -c "
          import warnings
          warnings.simplefilter('always')
          
          packages_to_check = [
              'pkg_resources',
              'setuptools', 
              'azure',
              'requests',
              'urllib3'
          ]
          
          for pkg in packages_to_check:
              try:
                  print(f'Checking {pkg}...')
                  __import__(pkg)
                  print(f'{pkg}: OK')
              except ImportWarning as w:
                  print(f'{pkg} ImportWarning: {w}')
              except DeprecationWarning as w:
                  print(f'{pkg} DeprecationWarning: {w}')
              except ModuleNotFoundError:
                  print(f'{pkg}: Not installed')
              except Exception as e:
                  print(f'{pkg}: {type(e).__name__}: {e}')
              print('')
          " 2>&1 | tee -a "$WARNINGS_LOG"
          
          # Check for specific known issues
          echo "üîç Checking for known issues..." | tee -a "$WARNINGS_LOG"
          
          # Check pkg_resources specifically
          PKG_RESOURCES_WARNING=$(python3 -c "import warnings; warnings.simplefilter('always'); import pkg_resources" 2>&1 | grep -i "pkg_resources\|deprecated" || echo "")
          if [ ! -z "$PKG_RESOURCES_WARNING" ]; then
            echo "‚ùå pkg_resources deprecation warning detected:" | tee -a "$WARNINGS_LOG"
            echo "$PKG_RESOURCES_WARNING" | tee -a "$WARNINGS_LOG"
            echo "has_pkg_resources_warning=true" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ No pkg_resources warnings detected" | tee -a "$WARNINGS_LOG"
            echo "has_pkg_resources_warning=false" >> $GITHUB_OUTPUT
          fi
          echo "" >> "$WARNINGS_LOG"
          
          # Check setuptools version
          SETUPTOOLS_VERSION=$(python3 -c "import setuptools; print(setuptools.__version__)" 2>/dev/null || echo "unknown")
          echo "üì¶ Setuptools version: $SETUPTOOLS_VERSION" | tee -a "$WARNINGS_LOG"
          
          # Parse version and check if >= 81
          if [ "$SETUPTOOLS_VERSION" != "unknown" ]; then
            MAJOR_VERSION=$(echo "$SETUPTOOLS_VERSION" | cut -d'.' -f1)
            if [ "$MAJOR_VERSION" -ge 81 ]; then
              echo "‚ö†Ô∏è Setuptools version $SETUPTOOLS_VERSION may cause pkg_resources warnings" | tee -a "$WARNINGS_LOG"
              echo "setuptools_needs_pin=true" >> $GITHUB_OUTPUT
            else
              echo "‚úÖ Setuptools version $SETUPTOOLS_VERSION is compatible" | tee -a "$WARNINGS_LOG"
              echo "setuptools_needs_pin=false" >> $GITHUB_OUTPUT
            fi
          fi
          echo "" >> "$WARNINGS_LOG"
          
          # Summary
          echo "üìã Summary:" | tee -a "$WARNINGS_LOG"
          echo "‚Ä¢ Azure CLI version: $(az version --query '"azure-cli"' -o tsv)" | tee -a "$WARNINGS_LOG"
          echo "‚Ä¢ Python version: $(python3 --version)" | tee -a "$WARNINGS_LOG"
          echo "‚Ä¢ Setuptools version: $SETUPTOOLS_VERSION" | tee -a "$WARNINGS_LOG"
          echo "‚Ä¢ Runner image: $ImageOS $ImageVersion" | tee -a "$WARNINGS_LOG"

      - name: üì§ Upload Detailed Warning Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-warnings-detailed-${{ github.run_number }}
          path: dependency-warnings-detailed.txt
          retention-days: 90

      - name: üêõ Create Issue for pkg_resources Warning
        if: steps.dep-check.outputs.has_pkg_resources_warning == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'üêõ pkg_resources deprecation warning detected';
            const body = `
            ## Issue Description
            The \`pkg_resources\` package deprecation warning has been detected in our GitHub Actions workflows.
            
            ## Warning Details
            - **Detection Date**: ${new Date().toISOString()}
            - **Workflow**: ${{ github.workflow }}
            - **Run**: ${{ github.run_number }}
            - **Runner**: ${{ runner.os }}
            
            ## Warning Message
            \`\`\`
            UserWarning: pkg_resources is deprecated as an API. 
            See https://setuptools.pypa.io/en/latest/pkg_resources.html. 
            The pkg_resources package is slated for removal as early as 2025-11-30. 
            Refrain from using this package or pin to Setuptools<81.
            \`\`\`
            
            ## Impact
            - This warning appears in Azure CLI operations
            - May affect workflow reliability after Nov 2025
            - Could impact CI/CD pipeline performance
            
            ## Recommended Actions
            1. **Short-term**: Pin setuptools to version <81 in requirements
            2. **Medium-term**: Monitor Azure CLI updates for fixes
            3. **Long-term**: Migrate away from pkg_resources dependency
            
            ## Potential Solutions
            - Pin setuptools version: \`pip install "setuptools<81"\`
            - Update Azure CLI when fixes are available
            - Use alternative packages that don't depend on pkg_resources
            
            ## Automation
            This issue was automatically created by the dependency check workflow.
            Download the detailed report artifact for more information.
            
            ---
            **Workflow**: [${{ github.workflow }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            // Check if issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'dependencies,warning,pkg_resources'
            });
            
            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['dependencies', 'warning', 'pkg_resources', 'maintenance']
              });
              console.log('Created new issue for pkg_resources warning');
            } else {
              console.log('Issue already exists for pkg_resources warning');
            }

      - name: üìã Summary
        run: |
          echo "üîç Dependency Check Complete"
          echo ""
          echo "Results:"
          echo "‚Ä¢ pkg_resources warning: ${{ steps.dep-check.outputs.has_pkg_resources_warning }}"
          echo "‚Ä¢ setuptools needs pin: ${{ steps.dep-check.outputs.setuptools_needs_pin }}"
          echo ""
          echo "üìÑ Download the detailed report artifact for complete analysis."
