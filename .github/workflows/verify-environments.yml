name: 🔍 Verify GitHub Environments

on:
  workflow_dispatch:

jobs:
  verify-environments:
    name: Verify GitHub Environments
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup GitHub CLI
        run: |
          # GitHub CLI is pre-installed in ubuntu-latest
          gh --version

      - name: 🔍 Verify Environments Exist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔍 Checking GitHub environments..."
          echo ""
          
          REQUIRED_ENVS=("dev" "staging" "prod")
          MISSING_ENVS=()
          
          for env in "${REQUIRED_ENVS[@]}"; do
            if gh api repos/${{ github.repository }}/environments/$env &> /dev/null; then
              echo "✅ Environment '$env' exists"
            else
              echo "❌ Environment '$env' is missing"
              MISSING_ENVS+=("$env")
            fi
          done
          
          echo ""
          
          if [ ${#MISSING_ENVS[@]} -eq 0 ]; then
            echo "🎉 All required environments are configured!"
            
            echo ""
            echo "📋 Environment Details:"
            gh api repos/${{ github.repository }}/environments --jq '.environments[] | "- \(.name): \(.protection_rules | length) protection rules, created \(.created_at)"'
            
          else
            echo "⚠️  Missing environments: ${MISSING_ENVS[*]}"
            echo ""
            echo "🔧 To create missing environments, run:"
            echo "   ./scripts/setup-github-environments.sh"
            echo ""
            echo "Or create them manually at:"
            echo "   https://github.com/${{ github.repository }}/settings/environments"
            exit 1
          fi

      - name: 📝 Generate Environment Status Report
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat > environment-status-report.md << 'EOF'
          # GitHub Environments Status Report
          
          This report shows the current status of GitHub environments for Terraform workflows.
          
          ## Environment Configuration
          
          EOF
          
          # Add environment details
          gh api repos/${{ github.repository }}/environments --jq -r '.environments[] | 
          "### 🌍 " + (.name | ascii_upcase) + "
          - **Created:** \(.created_at)
          - **Protection Rules:** \(.protection_rules | length)
          - **Can Admins Bypass:** \(.can_admins_bypass)
          - **URL:** \(.html_url)
          
          "' >> environment-status-report.md
          
          cat >> environment-status-report.md << 'EOF'
          ## Next Steps
          
          ### 1. Configure Azure Secrets
          
          For each environment, add these secrets via GitHub UI:
          - `AZURE_CLIENT_ID`
          - `AZURE_TENANT_ID` 
          - `AZURE_SUBSCRIPTION_ID`
          
          ### 2. Set Environment Variables
          
          Configure environment-specific variables:
          
          **All Environments:**
          ```
          TF_VAR_location = "Central US"
          TF_VAR_instance = "001"
          ```
          
          **Per Environment:**
          - dev: `TF_VAR_environment = "dev"`
          - staging: `TF_VAR_environment = "staging"`
          - prod: `TF_VAR_environment = "prod"`
          
          ### 3. Security Configuration
          
          Environments are configured with appropriate protection rules:
          - **dev**: No protection (immediate deployment)
          - **staging**: Reviewer required + prevent self-review
          - **prod**: Reviewer required + 5-minute wait timer + prevent self-review
          
          ## Security Best Practices
          
          ✅ **Environment creation**: Done via one-time admin script (not workflows)
          ✅ **Workflow permissions**: Minimal (contents: read only)
          ✅ **Secrets isolation**: Each environment has separate secrets
          ✅ **Protection rules**: Production has appropriate safeguards
          
          EOF
      - name: 📤 Upload Environment Status Report
        uses: actions/upload-artifact@v4
        with:
          name: environment-status-report
          path: environment-status-report.md
          retention-days: 30
