# Enhanced Terraform Backend Configuration Template
# This file should be copied to your environment-specific providers.tf

terraform {
  required_version = ">= 1.6.0"
  
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "~> 3.84.0"
    }
    azuread = {
      source  = "hashicorp/azuread" 
      version = "~> 2.46.0"
    }
  }

  backend "azurerm" {
    # Environment-specific values - update these for each environment
    resource_group_name  = "rg-terraform-state-${ENVIRONMENT}-eus-001"
    storage_account_name = "staks${ENVIRONMENT}eus001tfstate"
    container_name       = "tfstate"
    key                  = "terraform.tfstate"
    
    # Security settings
    use_oidc                     = true
    use_azuread_auth            = true
    storage_use_azuread         = true
    skip_provider_registration  = true
    
    # Optional: Specify subscription if different from default
    # subscription_id = "YOUR_SUBSCRIPTION_ID"
  }
}

# Configure providers with security features
provider "azurerm" {
  features {
    resource_group {
      prevent_deletion_if_contains_resources = true
    }
    storage {
      prevent_deletion_if_contains_resources = true
    }
    key_vault {
      purge_soft_delete_on_destroy    = false
      recover_soft_deleted_key_vaults = true
    }
  }
  
  # Security settings
  skip_provider_registration = true
  use_oidc                  = true
  
  # Optional: Specify subscription if different from default
  # subscription_id = "YOUR_SUBSCRIPTION_ID"
}

provider "azuread" {
  use_oidc = true
  
  # Optional: Specify tenant if different from default
  # tenant_id = "YOUR_TENANT_ID"
}

# Local values for consistent naming and tagging
locals {
  # Environment-aware naming
  environment    = var.environment
  location_short = var.location_short
  name_prefix    = "${var.environment}-${var.location_short}"
  
  # Comprehensive tagging strategy
  common_tags = {
    Environment       = var.environment
    Project          = "aks-private"
    ManagedBy        = "Terraform"
    Owner            = var.owner_email
    CostCenter       = var.cost_center
    Purpose          = "Infrastructure"
    CreatedDate      = formatdate("YYYY-MM-DD", timestamp())
    GitRepo          = var.git_repository
    GitCommit        = var.git_commit_sha
    TerraformPath    = path.module
    
    # Security and compliance tags
    DataClassification = var.data_classification
    ComplianceScope   = var.compliance_scope
    BackupRequired    = "true"
    MonitoringEnabled = "true"
  }
  
  # Security configurations per environment
  security_config = {
    dev = {
      network_access_default = "Deny"
      allow_public_access    = false
      log_retention_days     = 30
      backup_retention_days  = 7
    }
    staging = {
      network_access_default = "Deny"
      allow_public_access    = false
      log_retention_days     = 90
      backup_retention_days  = 30
    }
    prod = {
      network_access_default = "Deny"
      allow_public_access    = false
      log_retention_days     = 365
      backup_retention_days  = 90
    }
  }
}
